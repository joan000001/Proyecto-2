
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.26+1 (git sha1 b1a011138, x86_64-w64-mingw32-g++ 9.2.1 -Os)


-- Running command `read_verilog -sv ../design/7segmentos.sv ../design/mux_7seg.sv ../design/rebote.sv ../design/suma.sv ../design/teclado.sv ../design/top.sv ; synth_gowin -top top -json maquina.json' --

1. Executing Verilog-2005 frontend: ../design/7segmentos.sv
Parsing SystemVerilog input from `../design/7segmentos.sv' to AST representation.
Generating RTLIL representation for module `\sevseg'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../design/mux_7seg.sv
Parsing SystemVerilog input from `../design/mux_7seg.sv' to AST representation.
Generating RTLIL representation for module `\multiplex_display'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../design/rebote.sv
Parsing SystemVerilog input from `../design/rebote.sv' to AST representation.
Generating RTLIL representation for module `\keypad_decoder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../design/suma.sv
Parsing SystemVerilog input from `../design/suma.sv' to AST representation.
Generating RTLIL representation for module `\suma'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../design/teclado.sv
Parsing SystemVerilog input from `../design/teclado.sv' to AST representation.
Generating RTLIL representation for module `\teclado_matricial'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../design/top.sv
Parsing SystemVerilog input from `../design/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

7. Executing SYNTH_GOWIN pass.

7.1. Executing Verilog-2005 frontend: D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Successfully finished Verilog frontend.

7.2. Executing HIERARCHY pass (managing design hierarchy).

7.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \sevseg
Used module:     \multiplex_display
Used module:     \suma
Used module:     \teclado_matricial

7.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \sevseg
Used module:     \multiplex_display
Used module:     \suma
Used module:     \teclado_matricial
Removing unused module `\keypad_decoder'.
Removed 1 unused modules.

7.3. Executing PROC pass (convert processes to netlists).

7.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:661$270'.
Cleaned up 1 empty switch.

7.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:535$266 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:515$264 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:496$262 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:476$260 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:457$258 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:437$256 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:418$254 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:398$252 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:348$246 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:328$244 in module DFFC.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:309$242 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:289$240 in module DFFP.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:270$238 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:250$236 in module DFFR.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:231$234 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:211$232 in module DFFS.
Marked 2 switch rules as full_case in process $proc$../design/teclado.sv:120$39 in module teclado_matricial.
Marked 3 switch rules as full_case in process $proc$../design/teclado.sv:98$35 in module teclado_matricial.
Marked 2 switch rules as full_case in process $proc$../design/teclado.sv:0$33 in module teclado_matricial.
Removed 1 dead cases from process $proc$../design/teclado.sv:0$32 in module teclado_matricial.
Marked 1 switch rules as full_case in process $proc$../design/teclado.sv:0$32 in module teclado_matricial.
Marked 2 switch rules as full_case in process $proc$../design/teclado.sv:39$25 in module teclado_matricial.
Marked 3 switch rules as full_case in process $proc$../design/suma.sv:0$13 in module suma.
Removed 1 dead cases from process $proc$../design/mux_7seg.sv:0$11 in module multiplex_display.
Removed 1 dead cases from process $proc$../design/mux_7seg.sv:0$10 in module multiplex_display.
Marked 2 switch rules as full_case in process $proc$../design/mux_7seg.sv:18$2 in module multiplex_display.
Removed 1 dead cases from process $proc$../design/7segmentos.sv:0$1 in module sevseg.
Marked 1 switch rules as full_case in process $proc$../design/7segmentos.sv:0$1 in module sevseg.
Removed a total of 4 dead cases.

7.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 41 assignments to connections.

7.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$267'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$265'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$263'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$261'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$259'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$257'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$255'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$253'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$251'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$249'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$247'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$245'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$243'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$241'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$239'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$237'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$235'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$233'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$231'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$229'.
  Set init value: \Q = 1'0

7.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:535$266'.
Found async reset \CLEAR in `\DFFNC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:515$264'.
Found async reset \PRESET in `\DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:496$262'.
Found async reset \PRESET in `\DFFNP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:476$260'.
Found async reset \CLEAR in `\DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:348$246'.
Found async reset \CLEAR in `\DFFC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:328$244'.
Found async reset \PRESET in `\DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:309$242'.
Found async reset \PRESET in `\DFFP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:289$240'.
Found async reset \rst_n in `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
Found async reset \rst_n in `\teclado_matricial.$proc$../design/teclado.sv:98$35'.
Found async reset \rst_n in `\teclado_matricial.$proc$../design/teclado.sv:39$25'.
Found async reset \rst_n in `\multiplex_display.$proc$../design/mux_7seg.sv:18$2'.

7.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~33 debug messages>

7.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ALU.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:661$270'.
Creating decoders for process `\DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$267'.
Creating decoders for process `\DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:535$266'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$265'.
Creating decoders for process `\DFFNC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:515$264'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$263'.
Creating decoders for process `\DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:496$262'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$261'.
Creating decoders for process `\DFFNP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:476$260'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$259'.
Creating decoders for process `\DFFNRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:457$258'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$257'.
Creating decoders for process `\DFFNR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:437$256'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$255'.
Creating decoders for process `\DFFNSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:418$254'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$253'.
Creating decoders for process `\DFFNS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:398$252'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$251'.
Creating decoders for process `\DFFNE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:381$250'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$249'.
Creating decoders for process `\DFFN.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:366$248'.
Creating decoders for process `\DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$247'.
Creating decoders for process `\DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:348$246'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$245'.
Creating decoders for process `\DFFC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:328$244'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$243'.
Creating decoders for process `\DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:309$242'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$241'.
Creating decoders for process `\DFFP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:289$240'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$239'.
Creating decoders for process `\DFFRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:270$238'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$237'.
Creating decoders for process `\DFFR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:250$236'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$235'.
Creating decoders for process `\DFFSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:231$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$233'.
Creating decoders for process `\DFFS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:211$232'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$231'.
Creating decoders for process `\DFFE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:194$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$229'.
Creating decoders for process `\DFF.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:179$228'.
Creating decoders for process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
     1/7: $0\reg_dig2_3[3:0]
     2/7: $0\reg_dig2_2[3:0]
     3/7: $0\reg_dig2_1[3:0]
     4/7: $0\reg_dig1_3[3:0]
     5/7: $0\reg_dig1_2[3:0]
     6/7: $0\reg_dig1_1[3:0]
     7/7: $0\contador_digitos[2:0]
Creating decoders for process `\teclado_matricial.$proc$../design/teclado.sv:98$35'.
     1/3: $0\tecla_anterior[0:0]
     2/3: $0\tecla_presionada[0:0]
     3/3: $0\contador_debounce[19:0]
Creating decoders for process `\teclado_matricial.$proc$../design/teclado.sv:0$33'.
     1/3: $2\tecla_detectada[3:0]
     2/3: $1\tecla_detectada[3:0]
     3/3: $1\tecla_valida[0:0]
Creating decoders for process `\teclado_matricial.$proc$../design/teclado.sv:0$32'.
     1/1: $1\filas[3:0]
Creating decoders for process `\teclado_matricial.$proc$../design/teclado.sv:39$25'.
     1/2: $0\contador_scan[16:0]
     2/2: $0\fila_actual[1:0]
Creating decoders for process `\suma.$proc$../design/suma.sv:0$13'.
     1/3: $1\sum_m[4:0]
     2/3: $1\sum_d[4:0]
     3/3: $1\sum_u[4:0]
Creating decoders for process `\multiplex_display.$proc$../design/mux_7seg.sv:0$11'.
     1/1: $1\segmento_activo[3:0]
Creating decoders for process `\multiplex_display.$proc$../design/mux_7seg.sv:0$10'.
     1/1: $1\bcd_value[3:0]
Creating decoders for process `\multiplex_display.$proc$../design/mux_7seg.sv:18$2'.
     1/2: $0\contador[16:0]
     2/2: $0\pantalla_activa[1:0]
Creating decoders for process `\sevseg.$proc$../design/7segmentos.sv:0$1'.
     1/1: $1\segments_reg[6:0]

7.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\teclado_matricial.\tecla_detectada' from process `\teclado_matricial.$proc$../design/teclado.sv:0$33'.
No latch inferred for signal `\teclado_matricial.\tecla_valida' from process `\teclado_matricial.$proc$../design/teclado.sv:0$33'.
No latch inferred for signal `\teclado_matricial.\filas' from process `\teclado_matricial.$proc$../design/teclado.sv:0$32'.
No latch inferred for signal `\suma.\digito1' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\digito2' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\digito3' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\digito4' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\sum_u' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\sum_d' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\sum_m' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\car1' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\suma.\car2' from process `\suma.$proc$../design/suma.sv:0$13'.
No latch inferred for signal `\multiplex_display.\segmento_activo' from process `\multiplex_display.$proc$../design/mux_7seg.sv:0$11'.
No latch inferred for signal `\multiplex_display.\bcd_value' from process `\multiplex_display.$proc$../design/mux_7seg.sv:0$10'.
No latch inferred for signal `\sevseg.\segments_reg' from process `\sevseg.$proc$../design/7segmentos.sv:0$1'.

7.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ALU.\C' using process `\ALU.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:661$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:661$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:535$266'.
  created $adff cell `$procdff$508' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:515$264'.
  created $adff cell `$procdff$509' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:496$262'.
  created $adff cell `$procdff$510' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:476$260'.
  created $adff cell `$procdff$511' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:457$258'.
  created $dff cell `$procdff$512' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:437$256'.
  created $dff cell `$procdff$513' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:418$254'.
  created $dff cell `$procdff$514' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:398$252'.
  created $dff cell `$procdff$515' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:381$250'.
  created $dff cell `$procdff$516' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:366$248'.
  created $dff cell `$procdff$517' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:348$246'.
  created $adff cell `$procdff$518' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:328$244'.
  created $adff cell `$procdff$519' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:309$242'.
  created $adff cell `$procdff$520' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:289$240'.
  created $adff cell `$procdff$521' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:270$238'.
  created $dff cell `$procdff$522' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:250$236'.
  created $dff cell `$procdff$523' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:231$234'.
  created $dff cell `$procdff$524' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:211$232'.
  created $dff cell `$procdff$525' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:194$230'.
  created $dff cell `$procdff$526' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:179$228'.
  created $dff cell `$procdff$527' with positive edge clock.
Creating register for signal `\teclado_matricial.\contador_digitos' using process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
  created $adff cell `$procdff$528' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\reg_dig1_1' using process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
  created $adff cell `$procdff$529' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\reg_dig1_2' using process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
  created $adff cell `$procdff$530' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\reg_dig1_3' using process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
  created $adff cell `$procdff$531' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\reg_dig2_1' using process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
  created $adff cell `$procdff$532' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\reg_dig2_2' using process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
  created $adff cell `$procdff$533' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\reg_dig2_3' using process `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
  created $adff cell `$procdff$534' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\contador_debounce' using process `\teclado_matricial.$proc$../design/teclado.sv:98$35'.
  created $adff cell `$procdff$535' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\tecla_presionada' using process `\teclado_matricial.$proc$../design/teclado.sv:98$35'.
  created $adff cell `$procdff$536' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\tecla_anterior' using process `\teclado_matricial.$proc$../design/teclado.sv:98$35'.
  created $adff cell `$procdff$537' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\fila_actual' using process `\teclado_matricial.$proc$../design/teclado.sv:39$25'.
  created $adff cell `$procdff$538' with positive edge clock and negative level reset.
Creating register for signal `\teclado_matricial.\contador_scan' using process `\teclado_matricial.$proc$../design/teclado.sv:39$25'.
  created $adff cell `$procdff$539' with positive edge clock and negative level reset.
Creating register for signal `\multiplex_display.\pantalla_activa' using process `\multiplex_display.$proc$../design/mux_7seg.sv:18$2'.
  created $adff cell `$procdff$540' with positive edge clock and negative level reset.
Creating register for signal `\multiplex_display.\contador' using process `\multiplex_display.$proc$../design/mux_7seg.sv:18$2'.
  created $adff cell `$procdff$541' with positive edge clock and negative level reset.

7.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `ALU.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:661$270'.
Removing empty process `DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$267'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:535$266'.
Removing empty process `DFFNCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:535$266'.
Removing empty process `DFFNC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$265'.
Removing empty process `DFFNC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:515$264'.
Removing empty process `DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$263'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:496$262'.
Removing empty process `DFFNPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:496$262'.
Removing empty process `DFFNP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$261'.
Removing empty process `DFFNP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:476$260'.
Removing empty process `DFFNRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$259'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:457$258'.
Removing empty process `DFFNRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:457$258'.
Removing empty process `DFFNR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$257'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:437$256'.
Removing empty process `DFFNR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:437$256'.
Removing empty process `DFFNSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$255'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:418$254'.
Removing empty process `DFFNSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:418$254'.
Removing empty process `DFFNS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$253'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:398$252'.
Removing empty process `DFFNS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:398$252'.
Removing empty process `DFFNE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$251'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:381$250'.
Removing empty process `DFFNE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:381$250'.
Removing empty process `DFFN.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$249'.
Removing empty process `DFFN.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:366$248'.
Removing empty process `DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$247'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:348$246'.
Removing empty process `DFFCE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:348$246'.
Removing empty process `DFFC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$245'.
Removing empty process `DFFC.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:328$244'.
Removing empty process `DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$243'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:309$242'.
Removing empty process `DFFPE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:309$242'.
Removing empty process `DFFP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$241'.
Removing empty process `DFFP.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:289$240'.
Removing empty process `DFFRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$239'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:270$238'.
Removing empty process `DFFRE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:270$238'.
Removing empty process `DFFR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$237'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:250$236'.
Removing empty process `DFFR.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:250$236'.
Removing empty process `DFFSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$235'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:231$234'.
Removing empty process `DFFSE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:231$234'.
Removing empty process `DFFS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:211$232'.
Removing empty process `DFFS.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:211$232'.
Removing empty process `DFFE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$231'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:194$230'.
Removing empty process `DFFE.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:194$230'.
Removing empty process `DFF.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:0$229'.
Removing empty process `DFF.$proc$D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_sim.v:179$228'.
Found and cleaned up 4 empty switches in `\teclado_matricial.$proc$../design/teclado.sv:120$39'.
Removing empty process `teclado_matricial.$proc$../design/teclado.sv:120$39'.
Found and cleaned up 2 empty switches in `\teclado_matricial.$proc$../design/teclado.sv:98$35'.
Removing empty process `teclado_matricial.$proc$../design/teclado.sv:98$35'.
Found and cleaned up 2 empty switches in `\teclado_matricial.$proc$../design/teclado.sv:0$33'.
Removing empty process `teclado_matricial.$proc$../design/teclado.sv:0$33'.
Found and cleaned up 1 empty switch in `\teclado_matricial.$proc$../design/teclado.sv:0$32'.
Removing empty process `teclado_matricial.$proc$../design/teclado.sv:0$32'.
Found and cleaned up 1 empty switch in `\teclado_matricial.$proc$../design/teclado.sv:39$25'.
Removing empty process `teclado_matricial.$proc$../design/teclado.sv:39$25'.
Found and cleaned up 3 empty switches in `\suma.$proc$../design/suma.sv:0$13'.
Removing empty process `suma.$proc$../design/suma.sv:0$13'.
Found and cleaned up 1 empty switch in `\multiplex_display.$proc$../design/mux_7seg.sv:0$11'.
Removing empty process `multiplex_display.$proc$../design/mux_7seg.sv:0$11'.
Found and cleaned up 1 empty switch in `\multiplex_display.$proc$../design/mux_7seg.sv:0$10'.
Removing empty process `multiplex_display.$proc$../design/mux_7seg.sv:0$10'.
Found and cleaned up 1 empty switch in `\multiplex_display.$proc$../design/mux_7seg.sv:18$2'.
Removing empty process `multiplex_display.$proc$../design/mux_7seg.sv:18$2'.
Found and cleaned up 1 empty switch in `\sevseg.$proc$../design/7segmentos.sv:0$1'.
Removing empty process `sevseg.$proc$../design/7segmentos.sv:0$1'.
Cleaned up 35 empty switches.

7.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
Optimizing module teclado_matricial.
<suppressed ~4 debug messages>
Optimizing module suma.
Optimizing module multiplex_display.
<suppressed ~3 debug messages>
Optimizing module sevseg.

7.4. Executing FLATTEN pass (flatten design).
Deleting now unused module teclado_matricial.
Deleting now unused module suma.
Deleting now unused module multiplex_display.
Deleting now unused module sevseg.
<suppressed ~4 debug messages>

7.5. Executing TRIBUF pass.

7.6. Executing DEMINOUT pass (demote inout ports to input or output).

7.7. Executing SYNTH pass.

7.7.1. Executing PROC pass (convert processes to netlists).

7.7.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.7.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.7.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

7.7.1.4. Executing PROC_INIT pass (extract init attributes).

7.7.1.5. Executing PROC_ARST pass (detect async resets in processes).

7.7.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

7.7.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.7.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.7.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

7.7.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.7.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.7.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 88 unused wires.
<suppressed ~5 debug messages>

7.7.4. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

7.7.5. Executing OPT pass (performing simple optimizations).

7.7.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

7.7.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\teclado.$procmux$463.
Removed 1 multiplexer ports.
<suppressed ~20 debug messages>

7.7.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.7.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.7.5.6. Executing OPT_DFF pass (perform DFF optimizations).

7.7.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

7.7.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.5.9. Rerunning OPT passes. (Maybe there is more to do..)

7.7.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

7.7.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.7.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.7.5.13. Executing OPT_DFF pass (perform DFF optimizations).

7.7.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.7.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.5.16. Finished OPT passes. (There is nothing left to do.)

7.7.6. Executing FSM pass (extract and optimize FSM).

7.7.6.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.teclado.contador_digitos.

7.7.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\teclado.contador_digitos' from module `\top'.
  found $adff cell for state register: $flatten\teclado.$procdff$528
  root of input selection tree: $flatten\teclado.$0\contador_digitos[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\teclado.$logic_and$../design/teclado.sv:131$42_Y
  found ctrl input: $flatten\teclado.$le$../design/teclado.sv:133$43_Y
  found ctrl input: $flatten\teclado.$eq$../design/teclado.sv:165$44_Y
  found ctrl input: $flatten\teclado.$procmux$391_CMP
  found ctrl input: $flatten\teclado.$procmux$382_CMP
  found ctrl input: $flatten\teclado.$procmux$372_CMP
  found ctrl input: $flatten\teclado.$procmux$430_CMP
  found ctrl input: $flatten\teclado.$procmux$418_CMP
  found ctrl input: $flatten\teclado.$procmux$405_CMP
  found state code: 3'110
  found state code: 3'101
  found state code: 3'100
  found state code: 3'011
  found state code: 3'010
  found state code: 3'001
  found ctrl output: $flatten\teclado.$procmux$430_CMP
  found ctrl output: $flatten\teclado.$procmux$418_CMP
  found ctrl output: $flatten\teclado.$procmux$405_CMP
  found ctrl output: $flatten\teclado.$procmux$391_CMP
  found ctrl output: $flatten\teclado.$procmux$382_CMP
  found ctrl output: $flatten\teclado.$procmux$372_CMP
  ctrl inputs: { $flatten\teclado.$logic_and$../design/teclado.sv:131$42_Y $flatten\teclado.$le$../design/teclado.sv:133$43_Y $flatten\teclado.$eq$../design/teclado.sv:165$44_Y }
  ctrl outputs: { $flatten\teclado.$0\contador_digitos[2:0] $flatten\teclado.$procmux$372_CMP $flatten\teclado.$procmux$382_CMP $flatten\teclado.$procmux$391_CMP $flatten\teclado.$procmux$405_CMP $flatten\teclado.$procmux$418_CMP $flatten\teclado.$procmux$430_CMP }
  transition:      3'000 3'0-- ->      3'000 9'000000100
  transition:      3'000 3'100 ->      3'000 9'000000100
  transition:      3'000 3'101 ->      3'000 9'000000100
  transition:      3'000 3'11- ->      3'001 9'001000100
  transition:      3'100 3'0-- ->      3'100 9'100010000
  transition:      3'100 3'100 ->      3'100 9'100010000
  transition:      3'100 3'101 ->      3'000 9'000010000
  transition:      3'100 3'11- ->      3'101 9'101010000
  transition:      3'010 3'0-- ->      3'010 9'010000001
  transition:      3'010 3'100 ->      3'010 9'010000001
  transition:      3'010 3'101 ->      3'000 9'000000001
  transition:      3'010 3'11- ->      3'011 9'011000001
  transition:      3'110 3'0-- ->      3'110 9'110000000
  transition:      3'110 3'100 ->      3'110 9'110000000
  transition:      3'110 3'101 ->      3'000 9'000000000
  transition:      3'110 3'11- ->      3'110 9'110000000
  transition:      3'001 3'0-- ->      3'001 9'001000010
  transition:      3'001 3'100 ->      3'001 9'001000010
  transition:      3'001 3'101 ->      3'000 9'000000010
  transition:      3'001 3'11- ->      3'010 9'010000010
  transition:      3'101 3'0-- ->      3'101 9'101001000
  transition:      3'101 3'100 ->      3'101 9'101001000
  transition:      3'101 3'101 ->      3'000 9'000001000
  transition:      3'101 3'11- ->      3'110 9'110001000
  transition:      3'011 3'0-- ->      3'011 9'011100000
  transition:      3'011 3'100 ->      3'011 9'011100000
  transition:      3'011 3'101 ->      3'000 9'000100000
  transition:      3'011 3'11- ->      3'100 9'100100000

7.7.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\teclado.contador_digitos$542' from module `\top'.
  Merging pattern 3'100 and 3'101 from group (0 0 9'000000100).
  Merging pattern 3'101 and 3'100 from group (0 0 9'000000100).

7.7.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 11 unused cells and 11 unused wires.
<suppressed ~12 debug messages>

7.7.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\teclado.contador_digitos$542' from module `\top'.
  Removing unused output signal $flatten\teclado.$0\contador_digitos[2:0] [0].
  Removing unused output signal $flatten\teclado.$0\contador_digitos[2:0] [1].
  Removing unused output signal $flatten\teclado.$0\contador_digitos[2:0] [2].

7.7.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\teclado.contador_digitos$542' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ------1
  100 -> -----1-
  010 -> ----1--
  110 -> ---1---
  001 -> --1----
  101 -> -1-----
  011 -> 1------

7.7.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\teclado.contador_digitos$542' from module `top':
-------------------------------------

  Information on FSM $fsm$\teclado.contador_digitos$542 (\teclado.contador_digitos):

  Number of input signals:    3
  Number of output signals:   6
  Number of state bits:       7

  Input signals:
    0: $flatten\teclado.$eq$../design/teclado.sv:165$44_Y
    1: $flatten\teclado.$le$../design/teclado.sv:133$43_Y
    2: $flatten\teclado.$logic_and$../design/teclado.sv:131$42_Y

  Output signals:
    0: $flatten\teclado.$procmux$430_CMP
    1: $flatten\teclado.$procmux$418_CMP
    2: $flatten\teclado.$procmux$405_CMP
    3: $flatten\teclado.$procmux$391_CMP
    4: $flatten\teclado.$procmux$382_CMP
    5: $flatten\teclado.$procmux$372_CMP

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'10-   ->     0 6'000100
      1:     0 3'0--   ->     0 6'000100
      2:     0 3'11-   ->     4 6'000100
      3:     1 3'101   ->     0 6'010000
      4:     1 3'100   ->     1 6'010000
      5:     1 3'0--   ->     1 6'010000
      6:     1 3'11-   ->     5 6'010000
      7:     2 3'101   ->     0 6'000001
      8:     2 3'100   ->     2 6'000001
      9:     2 3'0--   ->     2 6'000001
     10:     2 3'11-   ->     6 6'000001
     11:     3 3'101   ->     0 6'000000
     12:     3 3'100   ->     3 6'000000
     13:     3 3'11-   ->     3 6'000000
     14:     3 3'0--   ->     3 6'000000
     15:     4 3'101   ->     0 6'000010
     16:     4 3'11-   ->     2 6'000010
     17:     4 3'100   ->     4 6'000010
     18:     4 3'0--   ->     4 6'000010
     19:     5 3'101   ->     0 6'001000
     20:     5 3'11-   ->     3 6'001000
     21:     5 3'100   ->     5 6'001000
     22:     5 3'0--   ->     5 6'001000
     23:     6 3'101   ->     0 6'100000
     24:     6 3'11-   ->     1 6'100000
     25:     6 3'100   ->     6 6'100000
     26:     6 3'0--   ->     6 6'100000

-------------------------------------

7.7.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\teclado.contador_digitos$542' from module `\top'.

7.7.7. Executing OPT pass (performing simple optimizations).

7.7.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

7.7.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

7.7.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

7.7.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.7.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.7.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\teclado.$procdff$538 ($adff) from module top (D = $flatten\teclado.$ternary$../design/teclado.sv:46$30_Y, Q = \teclado.fila_actual).
Adding EN signal on $flatten\teclado.$procdff$536 ($adff) from module top (D = $flatten\teclado.$0\tecla_presionada[0:0], Q = \teclado.tecla_presionada).
Adding EN signal on $flatten\teclado.$procdff$535 ($adff) from module top (D = $flatten\teclado.$0\contador_debounce[19:0], Q = \teclado.contador_debounce).
Adding EN signal on $flatten\teclado.$procdff$534 ($adff) from module top (D = $flatten\teclado.$procmux$373_Y, Q = \teclado.reg_dig2_3).
Adding EN signal on $flatten\teclado.$procdff$533 ($adff) from module top (D = $flatten\teclado.$procmux$383_Y, Q = \teclado.reg_dig2_2).
Adding EN signal on $flatten\teclado.$procdff$532 ($adff) from module top (D = $flatten\teclado.$procmux$392_Y, Q = \teclado.reg_dig2_1).
Adding EN signal on $flatten\teclado.$procdff$531 ($adff) from module top (D = $flatten\teclado.$procmux$406_Y, Q = \teclado.reg_dig1_3).
Adding EN signal on $flatten\teclado.$procdff$530 ($adff) from module top (D = $flatten\teclado.$procmux$419_Y, Q = \teclado.reg_dig1_2).
Adding EN signal on $flatten\teclado.$procdff$529 ($adff) from module top (D = $flatten\teclado.$procmux$431_Y, Q = \teclado.reg_dig1_1).
Adding EN signal on $flatten\controlador_de_pantalla.$procdff$540 ($adff) from module top (D = $flatten\controlador_de_pantalla.$ternary$../design/mux_7seg.sv:24$8_Y [1:0], Q = \controlador_de_pantalla.pantalla_activa).

7.7.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 33 unused wires.
<suppressed ~9 debug messages>

7.7.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

7.7.7.9. Rerunning OPT passes. (Maybe there is more to do..)

7.7.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

7.7.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.7.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

7.7.7.13. Executing OPT_DFF pass (perform DFF optimizations).

7.7.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

7.7.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.7.16. Rerunning OPT passes. (Maybe there is more to do..)

7.7.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

7.7.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.7.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.7.7.20. Executing OPT_DFF pass (perform DFF optimizations).

7.7.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.7.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.7.23. Finished OPT passes. (There is nothing left to do.)

7.7.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port top.$flatten\decodificador.$auto$mem.cc:319:emit$321 ($flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319).
Removed top 26 address bits (of 32) from memory init port top.$flatten\teclado.$auto$mem.cc:319:emit$317 ($flatten\teclado.$auto$proc_rom.cc:150:do_switch$315).
Removed top 1 bits (of 2) from port B of cell top.$flatten\teclado.$procmux$474_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\teclado.$add$../design/teclado.sv:110$38 ($add).
Removed top 12 bits (of 32) from port Y of cell top.$flatten\teclado.$add$../design/teclado.sv:110$38 ($add).
Removed top 12 bits (of 32) from port B of cell top.$flatten\teclado.$ge$../design/teclado.sv:107$37 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$flatten\teclado.$add$../design/teclado.sv:48$31 ($add).
Removed top 15 bits (of 32) from port Y of cell top.$flatten\teclado.$add$../design/teclado.sv:48$31 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\teclado.$add$../design/teclado.sv:46$29 ($add).
Removed top 18 bits (of 32) from port B of cell top.$flatten\teclado.$ge$../design/teclado.sv:44$27 ($ge).
Removed top 2 bits (of 5) from port B of cell top.$flatten\sumador.$add$../design/suma.sv:42$24 ($add).
Removed top 1 bits (of 5) from port B of cell top.$flatten\sumador.$gt$../design/suma.sv:41$23 ($gt).
Removed top 2 bits (of 5) from port B of cell top.$flatten\sumador.$add$../design/suma.sv:33$20 ($add).
Removed top 1 bits (of 5) from port B of cell top.$flatten\sumador.$gt$../design/suma.sv:32$19 ($gt).
Removed top 2 bits (of 5) from port B of cell top.$flatten\sumador.$add$../design/suma.sv:26$16 ($add).
Removed top 1 bits (of 5) from port B of cell top.$flatten\sumador.$gt$../design/suma.sv:25$15 ($gt).
Removed top 1 bits (of 2) from port B of cell top.$flatten\controlador_de_pantalla.$procmux$494_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:26$9 ($add).
Removed top 15 bits (of 32) from port Y of cell top.$flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:26$9 ($add).
Removed top 30 bits (of 32) from mux cell top.$flatten\controlador_de_pantalla.$ternary$../design/mux_7seg.sv:24$8 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:24$6 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:24$6 ($add).
Removed top 7 bits (of 17) from port B of cell top.$flatten\controlador_de_pantalla.$eq$../design/mux_7seg.sv:22$4 ($eq).
Removed top 30 bits (of 32) from wire top.$flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:24$6_Y.
Removed top 18 bits (of 32) from wire top.$flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:26$9_Y.
Removed top 12 bits (of 32) from wire top.$flatten\teclado.$add$../design/teclado.sv:110$38_Y.
Removed top 15 bits (of 32) from wire top.$flatten\teclado.$add$../design/teclado.sv:48$31_Y.
Removed top 1 bits (of 4) from wire top.$flatten\teclado.$procmux$406_Y.
Removed top 3 bits (of 4) from wire top.digito4.

7.7.9. Executing PEEPOPT pass (run peephole optimizers).

7.7.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

7.7.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:24$6 ($add).
  creating $macc model for $flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:26$9 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:24$14 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:26$16 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:31$17 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:31$18 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:33$20 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:40$21 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:40$22 ($add).
  creating $macc model for $flatten\sumador.$add$../design/suma.sv:42$24 ($add).
  creating $macc model for $flatten\teclado.$add$../design/teclado.sv:110$38 ($add).
  creating $macc model for $flatten\teclado.$add$../design/teclado.sv:46$29 ($add).
  creating $macc model for $flatten\teclado.$add$../design/teclado.sv:48$31 ($add).
  merging $macc model for $flatten\sumador.$add$../design/suma.sv:40$21 into $flatten\sumador.$add$../design/suma.sv:40$22.
  merging $macc model for $flatten\sumador.$add$../design/suma.sv:31$17 into $flatten\sumador.$add$../design/suma.sv:31$18.
  creating $alu model for $macc $flatten\teclado.$add$../design/teclado.sv:110$38.
  creating $alu model for $macc $flatten\sumador.$add$../design/suma.sv:42$24.
  creating $alu model for $macc $flatten\sumador.$add$../design/suma.sv:40$22.
  creating $alu model for $macc $flatten\teclado.$add$../design/teclado.sv:46$29.
  creating $alu model for $macc $flatten\sumador.$add$../design/suma.sv:33$20.
  creating $alu model for $macc $flatten\sumador.$add$../design/suma.sv:31$18.
  creating $alu model for $macc $flatten\teclado.$add$../design/teclado.sv:48$31.
  creating $alu model for $macc $flatten\sumador.$add$../design/suma.sv:26$16.
  creating $alu model for $macc $flatten\sumador.$add$../design/suma.sv:24$14.
  creating $alu model for $macc $flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:26$9.
  creating $alu model for $macc $flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:24$6.
  creating $alu model for $flatten\sumador.$gt$../design/suma.sv:25$15 ($gt): new $alu
  creating $alu model for $flatten\sumador.$gt$../design/suma.sv:32$19 ($gt): new $alu
  creating $alu model for $flatten\sumador.$gt$../design/suma.sv:41$23 ($gt): new $alu
  creating $alu model for $flatten\teclado.$ge$../design/teclado.sv:107$37 ($ge): new $alu
  creating $alu model for $flatten\teclado.$ge$../design/teclado.sv:44$27 ($ge): new $alu
  creating $alu model for $flatten\teclado.$le$../design/teclado.sv:133$43 ($le): new $alu
  creating $alu cell for $flatten\teclado.$le$../design/teclado.sv:133$43: $auto$alumacc.cc:485:replace_alu$707
  creating $alu cell for $flatten\teclado.$ge$../design/teclado.sv:44$27: $auto$alumacc.cc:485:replace_alu$716
  creating $alu cell for $flatten\teclado.$ge$../design/teclado.sv:107$37: $auto$alumacc.cc:485:replace_alu$725
  creating $alu cell for $flatten\sumador.$gt$../design/suma.sv:41$23: $auto$alumacc.cc:485:replace_alu$738
  creating $alu cell for $flatten\sumador.$gt$../design/suma.sv:32$19: $auto$alumacc.cc:485:replace_alu$743
  creating $alu cell for $flatten\sumador.$gt$../design/suma.sv:25$15: $auto$alumacc.cc:485:replace_alu$748
  creating $alu cell for $flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:24$6: $auto$alumacc.cc:485:replace_alu$753
  creating $alu cell for $flatten\controlador_de_pantalla.$add$../design/mux_7seg.sv:26$9: $auto$alumacc.cc:485:replace_alu$756
  creating $alu cell for $flatten\sumador.$add$../design/suma.sv:24$14: $auto$alumacc.cc:485:replace_alu$759
  creating $alu cell for $flatten\sumador.$add$../design/suma.sv:26$16: $auto$alumacc.cc:485:replace_alu$762
  creating $alu cell for $flatten\teclado.$add$../design/teclado.sv:48$31: $auto$alumacc.cc:485:replace_alu$765
  creating $alu cell for $flatten\sumador.$add$../design/suma.sv:31$18: $auto$alumacc.cc:485:replace_alu$768
  creating $alu cell for $flatten\sumador.$add$../design/suma.sv:33$20: $auto$alumacc.cc:485:replace_alu$771
  creating $alu cell for $flatten\teclado.$add$../design/teclado.sv:46$29: $auto$alumacc.cc:485:replace_alu$774
  creating $alu cell for $flatten\sumador.$add$../design/suma.sv:40$22: $auto$alumacc.cc:485:replace_alu$777
  creating $alu cell for $flatten\sumador.$add$../design/suma.sv:42$24: $auto$alumacc.cc:485:replace_alu$780
  creating $alu cell for $flatten\teclado.$add$../design/teclado.sv:110$38: $auto$alumacc.cc:485:replace_alu$783
  created 17 $alu and 0 $macc cells.

7.7.12. Executing SHARE pass (SAT-based resource sharing).

7.7.13. Executing OPT pass (performing simple optimizations).

7.7.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

7.7.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.7.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

7.7.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.7.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.7.13.6. Executing OPT_DFF pass (perform DFF optimizations).

7.7.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 11 unused wires.
<suppressed ~6 debug messages>

7.7.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.13.9. Rerunning OPT passes. (Maybe there is more to do..)

7.7.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

7.7.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.7.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.7.13.13. Executing OPT_DFF pass (perform DFF optimizations).

7.7.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.7.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.7.13.16. Finished OPT passes. (There is nothing left to do.)

7.7.14. Executing MEMORY pass.

7.7.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.7.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.7.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.7.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.7.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319'[0] in module `\top': no output FF found.
Checking read port `$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315'[0] in module `\top': no output FF found.
Checking read port address `$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319'[0] in module `\top': no address FF found.
Checking read port address `$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315'[0] in module `\top': no address FF found.

7.7.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.7.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.7.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.7.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.7.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.7.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.8. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319
using FF mapping for memory top.$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315
<suppressed ~12 debug messages>

7.9. Executing TECHMAP pass (map to technology primitives).

7.9.1. Executing Verilog-2005 frontend: D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

7.9.2. Executing Verilog-2005 frontend: D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/brams_map.v
Parsing Verilog input from `D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

7.9.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

7.10. Executing OPT pass (performing simple optimizations).

7.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~20 debug messages>

7.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

7.10.3. Executing OPT_DFF pass (perform DFF optimizations).

7.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 25 unused wires.
<suppressed ~6 debug messages>

7.10.5. Finished fast OPT passes.

7.11. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319 in module \top:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\teclado.$auto$proc_rom.cc:150:do_switch$315 in module \top:
  created 64 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 63 $mux cells.
  write interface: 0 write mux blocks.

7.12. Executing OPT pass (performing simple optimizations).

7.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~21 debug messages>

7.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

7.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][9]$1171:
      Old ports: A=4'0101, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$b$1110
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$b$1110 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$b$1110 [3:1] = { 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$b$1110 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][8]$1168:
      Old ports: A=4'0000, B=4'0100, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$a$1109
      New ports: A=1'0, B=1'1, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$a$1109 [2]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$a$1109 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$a$1109 [1:0] } = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][20]$1204:
      Old ports: A=4'1100, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$a$1127
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$a$1127 [2]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$a$1127 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$a$1127 [1:0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$a$1127 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][17]$1195:
      Old ports: A=4'1000, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$b$1122
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$b$1122 [3]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$b$1122 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][12]$1180:
      Old ports: A=4'1011, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$a$1115
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$a$1115 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$a$1115 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$a$1115 [0] 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$a$1115 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][4]$1156:
      Old ports: A=4'1010, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$a$1103
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$a$1103 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$a$1103 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$a$1103 [0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$a$1103 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][28]$1228:
      Old ports: A=4'1101, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$a$1139
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$a$1139 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$a$1139 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$a$1139 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$a$1139 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][2]$1150:
      Old ports: A=4'0011, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][1]$a$1100
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][1]$a$1100 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][1]$a$1100 [3:1] = { 2'00 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][1]$a$1100 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][1]$1147:
      Old ports: A=4'0010, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$b$1098
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$b$1098 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$b$1098 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$b$1098 [0] } = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][0]$1144:
      Old ports: A=4'0000, B=4'0001, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$a$1097
      New ports: A=1'0, B=1'1, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$a$1097 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$a$1097 [3:1] = 3'000
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][18]$1198:
      Old ports: A=4'1001, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][9]$a$1124
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][9]$a$1124 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][9]$a$1124 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][9]$a$1124 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][16]$1192:
      Old ports: A=4'0000, B=4'0111, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$a$1121
      New ports: A=1'0, B=1'1, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$a$1121 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$a$1121 [3:1] = { 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$a$1121 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$a$1121 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][26]$1222:
      Old ports: A=4'1110, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136 [0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136 [1] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][10]$1174:
      Old ports: A=4'0110, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$a$1112
      New ports: A=1'1, B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$a$1112 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$a$1112 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$a$1112 [0] } = { 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$a$1112 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][6]$1045:
      Old ports: A=7'1000110, B=7'0100001, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025
      New ports: A=2'10, B=2'01, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025 [1:0]
      New connections: $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025 [6:2] = { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025 [1:0] 2'00 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][5]$1042:
      Old ports: A=7'0001000, B=7'0000011, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023 [0] }
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023 [6:4] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023 [2:1] } = { 4'0000 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][4]$1039:
      Old ports: A=7'1111111, B=7'1101111, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$a$1022
      New ports: A=1'1, B=1'0, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$a$1022 [4]
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$a$1022 [6:5] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$a$1022 [3:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][3]$1036:
      Old ports: A=7'1111101, B=7'0000111, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [1] }
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [6:4] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [2] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [0] } = { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][2]$1033:
      Old ports: A=7'1100110, B=7'1101101, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$a$1019
      New ports: A=2'10, B=2'01, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$a$1019 [1:0]
      New connections: $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$a$1019 [6:2] = { 3'110 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$a$1019 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][1]$1030:
      Old ports: A=7'1011011, B=7'1001111, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017 [4] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017 [2] }
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017 [6:5] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017 [1:0] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][0]$1027:
      Old ports: A=7'0111111, B=7'0000110, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016
      New ports: A=1'1, B=1'0, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [0]
      New connections: $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [6:1] = { 1'0 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [0] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [0] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][3][7]$1048:
      Old ports: A=7'0000110, B=7'0001110, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$b$1026
      New ports: A=1'0, B=1'1, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$b$1026 [3]
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$b$1026 [6:4] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$b$1026 [2:0] } = 6'000110
    Consolidated identical input bits for $mux cell $flatten\sumador.$procmux$483:
      Old ports: A={ $flatten\sumador.$add$../design/suma.sv:42$24_Y [4:1] $auto$alumacc.cc:501:replace_alu$739 [0] }, B={ $flatten\sumador.$add$../design/suma.sv:40$22_Y [4:1] $auto$alumacc.cc:501:replace_alu$739 [0] }, Y=\sumador.sum_m
      New ports: A=$flatten\sumador.$add$../design/suma.sv:42$24_Y [4:1], B=$flatten\sumador.$add$../design/suma.sv:40$22_Y [4:1], Y=\sumador.sum_m [4:1]
      New connections: \sumador.sum_m [0] = $auto$alumacc.cc:501:replace_alu$739 [0]
    Consolidated identical input bits for $mux cell $flatten\sumador.$procmux$486:
      Old ports: A={ $flatten\sumador.$add$../design/suma.sv:33$20_Y [4:1] $auto$alumacc.cc:501:replace_alu$744 [0] }, B={ $flatten\sumador.$add$../design/suma.sv:31$18_Y [4:1] $auto$alumacc.cc:501:replace_alu$744 [0] }, Y=\sumador.sum_d
      New ports: A=$flatten\sumador.$add$../design/suma.sv:33$20_Y [4:1], B=$flatten\sumador.$add$../design/suma.sv:31$18_Y [4:1], Y=\sumador.sum_d [4:1]
      New connections: \sumador.sum_d [0] = $auto$alumacc.cc:501:replace_alu$744 [0]
    Consolidated identical input bits for $mux cell $flatten\sumador.$procmux$489:
      Old ports: A={ $flatten\sumador.$add$../design/suma.sv:26$16_Y [4:1] $auto$alumacc.cc:501:replace_alu$749 [0] }, B={ $flatten\sumador.$add$../design/suma.sv:24$14_Y [4:1] $auto$alumacc.cc:501:replace_alu$749 [0] }, Y=\sumador.sum_u
      New ports: A=$flatten\sumador.$add$../design/suma.sv:26$16_Y [4:1], B=$flatten\sumador.$add$../design/suma.sv:24$14_Y [4:1], Y=\sumador.sum_u [4:1]
      New connections: \sumador.sum_u [0] = $auto$alumacc.cc:501:replace_alu$749 [0]
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][5][24]$1216:
      Old ports: A=4'0000, B=4'1111, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133
      New ports: A=1'0, B=1'1, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$1138:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$a$1139, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$a$1094
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][14]$a$1139 [0], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$a$1094 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$a$1094 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$a$1094 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$a$1094 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$1135:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][13]$a$1136 [1], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092 [0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092 [1] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$1132:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][12]$a$1133 [0], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$1126:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$a$1127, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$a$1088
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][10]$a$1127 [2], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$a$1088 [2]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$a$1088 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$a$1088 [1:0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$a$1088 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][9]$1123:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][9]$a$1124, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$b$1086
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][9]$a$1124 [0], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$b$1086 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$b$1086 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$b$1086 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$1120:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$a$1121, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$b$1122, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085
      New ports: A={ 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$a$1121 [0] }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][8]$b$1122 [3] 1'0 }, Y={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [0] }
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [2:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$1114:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$a$1115, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$a$1082
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][6]$a$1115 [0], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$a$1082 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$a$1082 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$a$1082 [0] 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$a$1082 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$1111:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$a$1112, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][5]$a$1112 [1], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080 [0] } = { 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$1108:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$a$1109, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$b$1110, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079
      New ports: A={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$a$1109 [2] 1'0 }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$b$1110 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][4]$b$1110 [0] }, Y={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079 [2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079 [0] }
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079 [1] } = 2'00
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$1102:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$a$1103, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$a$1076
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][2]$a$1103 [1], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$a$1076 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$a$1076 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$a$1076 [0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$a$1076 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][1]$1099:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][1]$a$1100, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$b$1074
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][1]$a$1100 [0], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$b$1074 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$b$1074 [3:1] = { 2'00 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$b$1074 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$1096:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$a$1097, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$b$1098, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$a$1073
      New ports: A={ 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$a$1097 [0] }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][4][0]$b$1098 [1] 1'0 }, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$a$1073 [1:0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$a$1073 [3:2] = 2'00
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$1024:
      Old ports: A=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025, B=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$b$1026, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014
      New ports: A={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025 [1] 1'0 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$a$1025 [1:0] }, B={ 1'0 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][3]$b$1026 [3] 2'10 }, Y={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014 [6] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014 [1:0] }
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014 [5:4] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014 [2] } = { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014 [0] 1'0 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$b$1014 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$1021:
      Old ports: A=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$a$1022, B=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013
      New ports: A={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$a$1022 [4] 3'111 }, B={ 1'0 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023 [3] 1'0 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][2]$b$1023 [0] }, Y={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013 [4:2] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013 [0] }
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013 [6:5] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013 [1] } = { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013 [2] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013 [2] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][1]$a$1013 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$1018:
      Old ports: A=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$a$1019, B=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$b$1011
      New ports: A={ 2'10 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$a$1019 [0] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$a$1019 [1:0] }, B={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][1]$b$1020 [1] 1'1 }, Y={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$b$1011 [5:3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$b$1011 [1:0] }
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$b$1011 [6] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$b$1011 [2] } = { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$b$1011 [5] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$1015:
      Old ports: A=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016, B=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017, Y=$memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$a$1010
      New ports: A={ 1'0 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [0] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [0] 1'1 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$a$1016 [0] }, B={ 2'10 $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017 [4] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][2][0]$b$1017 [2] 1'1 }, Y={ $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$a$1010 [6:4] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$a$1010 [2] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$a$1010 [0] }
      New connections: { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$a$1010 [3] $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$a$1010 [1] } = { $memory$flatten\decodificador.$auto$proc_rom.cc:150:do_switch$319$rdmux[0][1][0]$a$1010 [0] 1'1 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$1093:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$a$1094, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][7]$a$1094 [0], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$1090:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070
      New ports: A={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$a$1091 [0] }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][6]$b$1092 [1] 1'0 }, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070 [1:0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070 [3:2] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070 [1] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$1087:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$a$1088, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$b$1068
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][5]$a$1088 [2], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$b$1068 [2]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$b$1068 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$b$1068 [1:0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$b$1068 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$1084:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$b$1086, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$a$1067
      New ports: A={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$a$1085 [0] }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$b$1086 [0] 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][4]$b$1086 [0] }, Y={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$a$1067 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$a$1067 [1:0] }
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$a$1067 [2] = $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][2]$a$1067 [1]
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$1081:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$a$1082, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$b$1065
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][3]$a$1082 [0], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$b$1065 [0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$b$1065 [3:1] = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$b$1065 [0] 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$b$1065 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$1078:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$a$1064
      New ports: A={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079 [2] 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$a$1079 [0] }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080 [1] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][2]$b$1080 [1] 1'0 }, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$a$1064 [2:0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][1]$a$1064 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$1075:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$a$1076, B=4'0000, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][1]$a$1076 [1], B=1'0, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062 [1]
      New connections: { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062 [3:2] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062 [0] } = { $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$1072:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$a$1073, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$b$1074, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$a$1061
      New ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$a$1073 [1:0], B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$b$1074 [0] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][3][0]$b$1074 [0] }, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$a$1061 [1:0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$a$1061 [3:2] = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$1069:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][1]$b$1059
      New ports: A={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070 [1] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$a$1070 [1:0] }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071 [0] 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][3]$b$1071 [0] }, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][1]$b$1059 [2:0]
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][1]$b$1059 [3] = $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][1]$b$1059 [2]
    Consolidated identical input bits for $mux cell $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$1060:
      Old ports: A=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$a$1061, B=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062, Y=$memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][0]$a$1055
      New ports: A={ 1'0 $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$a$1061 [1:0] }, B={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062 [1] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][2][0]$b$1062 [1] 1'0 }, Y={ $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][0]$a$1055 [3] $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][0]$a$1055 [1:0] }
      New connections: $memory$flatten\teclado.$auto$proc_rom.cc:150:do_switch$315$rdmux[0][1][0]$a$1055 [2] = 1'0
  Optimizing cells in module \top.
Performed a total of 52 changes.

7.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

7.12.6. Executing OPT_DFF pass (perform DFF optimizations).

7.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 130 unused wires.
<suppressed ~1 debug messages>

7.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.12.9. Rerunning OPT passes. (Maybe there is more to do..)

7.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

7.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.12.13. Executing OPT_DFF pass (perform DFF optimizations).

7.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.12.16. Finished OPT passes. (There is nothing left to do.)

7.13. Executing TECHMAP pass (map to technology primitives).

7.13.1. Executing Verilog-2005 frontend: D:\d-logico\oss-cad-suite\bin\../share/yosys/techmap.v
Parsing Verilog input from `D:\d-logico\oss-cad-suite\bin\../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.13.2. Executing Verilog-2005 frontend: D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/arith_map.v
Parsing Verilog input from `D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gw1n_alu'.
Successfully finished Verilog frontend.

7.13.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$bd964c14a1a0bc7ccb7c2d6ad481cc2be21f5ec0\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_80_gw1n_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$67e8f4b8dba01cd3d8fc718acd02276257d102de\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_80_gw1n_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_80_gw1n_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$18205a5da979f93ffab44671dcc4a48cf14e25e2\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~753 debug messages>

7.14. Executing OPT pass (performing simple optimizations).

7.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~402 debug messages>

7.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~132 debug messages>
Removed a total of 44 cells.

7.14.3. Executing OPT_DFF pass (perform DFF optimizations).

7.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 33 unused cells and 601 unused wires.
<suppressed ~34 debug messages>

7.14.5. Finished fast OPT passes.

7.15. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port top.clk using IBUF.
Mapping port top.columnas using IBUF.
Mapping port top.enable_displays using OBUF.
Mapping port top.filas using OBUF.
Mapping port top.rst_n using IBUF.
Mapping port top.segments using OBUF.

7.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

7.17. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

7.18. Executing TECHMAP pass (map to technology primitives).

7.18.1. Executing Verilog-2005 frontend: D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_map.v
Parsing Verilog input from `D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.18.2. Continuing TECHMAP pass.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
No more expansions possible.
<suppressed ~113 debug messages>

7.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

7.20. Executing SIMPLEMAP pass (map simple cells to gate primitives).

7.21. Executing ABC pass (technology mapping using ABC).

7.21.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 448 gates and 608 wires to a netlist network with 158 inputs and 191 outputs.

7.21.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.21.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      214
ABC RESULTS:        internal signals:      259
ABC RESULTS:           input signals:      158
ABC RESULTS:          output signals:      191
Removing temp directory.
Removed 0 unused cells and 922 unused wires.

7.22. Executing TECHMAP pass (map to technology primitives).

7.22.1. Executing Verilog-2005 frontend: D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_map.v
Parsing Verilog input from `D:\d-logico\oss-cad-suite\bin\../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.22.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$33e58adf67c6b686a154c9ce8ebbc4b04b8cabc5\$lut for cells of type $lut.
Using template $paramod$8e224a63a74b6daf8fc2e441cb0688a65e7a4073\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$ee19d45db61acb4c70d938b97483a4ed4b792645\$lut for cells of type $lut.
Using template $paramod$260a5dbd3303020bf6bacc5a8a6807c6aca3c9ab\$lut for cells of type $lut.
Using template $paramod$21467c203c389a4feadb8ce2044a20839fad01b3\$lut for cells of type $lut.
Using template $paramod$6a260fe5fea967a109f4b1644169b8c6a81d1ff1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$359fe4e746656bf9c72aecaff84fc7bdea9f55a5\$lut for cells of type $lut.
Using template $paramod$9ab494594f178f1b2722725c1a755ee5c002129c\$lut for cells of type $lut.
Using template $paramod$2b8e50841cffdea16b220fa0991be1f3ebbc87a9\$lut for cells of type $lut.
Using template $paramod$7d14b3c6056533b2dbb99f49e3dfbd7a1e606f8f\$lut for cells of type $lut.
Using template $paramod$60b758fd5679f6508bff32bea2afedb4f329e5f9\$lut for cells of type $lut.
Using template $paramod$787374a3aea1fc81320da39a83409b41b212f548\$lut for cells of type $lut.
Using template $paramod$5240c28a6256ca3ec85d89c9b49d3f0c922eb444\$lut for cells of type $lut.
Using template $paramod$59b9321b0b3f71430e8488fd3bac02a4001e8199\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$7d0558f50e844ed75f054a3d2729a7e5cd4d5506\$lut for cells of type $lut.
Using template $paramod$efa789f46bf7783fdadcaeb178b166b4f567b816\$lut for cells of type $lut.
Using template $paramod$9953e87765bffed48787864d4bce1333f6722e0b\$lut for cells of type $lut.
Using template $paramod$1e647c9a8437a79b0b96ccc22d51bf19ab874a42\$lut for cells of type $lut.
Using template $paramod$04c424516f93b92bd020eeefbdac3e0d695ae089\$lut for cells of type $lut.
Using template $paramod$c109c986295c59f07126c751a2d1bfdf034dab3f\$lut for cells of type $lut.
Using template $paramod$f971575c671447b44f9b5ef90cfe3eae864afd89\$lut for cells of type $lut.
Using template $paramod$a7048895f125a45cfa8fe7201a24409e87564c34\$lut for cells of type $lut.
Using template $paramod$bcf21bd4ab8496f76debcb57d589e55e187be920\$lut for cells of type $lut.
Using template $paramod$64779bd2f13acf5492f60e76d7750b210f4e6d75\$lut for cells of type $lut.
Using template $paramod$b0682d4656f75d0f60e235d7313c3151b74a2f62\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$2094d9f61882bdda7fe40531e892148192e68392\$lut for cells of type $lut.
Using template $paramod$0d352adcd51851d3e3ceae183e0b999545166610\$lut for cells of type $lut.
Using template $paramod$7d2ffb1127b6d3bcd5c17f2724b343ab1bc3ea11\$lut for cells of type $lut.
Using template $paramod$5952a78219b5b0972ce40036881e18757dec9e4d\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$a8cb9dc6eccb911035b7155b3fa8bdcdb987b386\$lut for cells of type $lut.
Using template $paramod$7088dc393780edfe7f2ca2ac146a5b54d02746a9\$lut for cells of type $lut.
Using template $paramod$8023976640a8a76907015fafbd95a3eccc654875\$lut for cells of type $lut.
Using template $paramod$16f4d5a320f8c31ec68e2957f4cfe520c3f549a4\$lut for cells of type $lut.
Using template $paramod$51a72b3c97628a3868b6745bc8baebb6552a1cd9\$lut for cells of type $lut.
Using template $paramod$28d07f25c3f724c7772d8abfb9144e8c7168eee9\$lut for cells of type $lut.
Using template $paramod$883c6280a5538377ae335ec96351e76802ac09ab\$lut for cells of type $lut.
Using template $paramod$fcf60f898920c3c97cc6a6ce04cd751b8bbbc908\$lut for cells of type $lut.
Using template $paramod$911a95d2ad1c5fc25c837302d77e6b40860d0232\$lut for cells of type $lut.
Using template $paramod$1365399f329eeda2e5e15103933ba31408c33366\$lut for cells of type $lut.
Using template $paramod$455952ea7cf7be9c9eaf1d7a5de7a19cbd1d3f89\$lut for cells of type $lut.
Using template $paramod$7089b4524091b651eae3c2862db87d31774892cf\$lut for cells of type $lut.
Using template $paramod$3669c5e9acaf2e2ddc6a2311acbdec739ca5ff4f\$lut for cells of type $lut.
Using template $paramod$e3ef767f8c1906b492190b83d202e204493893e2\$lut for cells of type $lut.
Using template $paramod$21b707668f40f85b35db9df26412cab4ca9fd889\$lut for cells of type $lut.
Using template $paramod$f29799a38a58a1f6a1bab364a502d39f77142fc0\$lut for cells of type $lut.
Using template $paramod$c8aa9d2153e3729bf51c0f7c3f61873bc4859d36\$lut for cells of type $lut.
Using template $paramod$b5790a76aeb953a266484fa873703c44bc670a95\$lut for cells of type $lut.
Using template $paramod$c1a00fe91fb62f48fb896283bc2480c5fd84493b\$lut for cells of type $lut.
Using template $paramod$0a4ab49b4985e7865da34fca06c0d9400c51bcbd\$lut for cells of type $lut.
Using template $paramod$e04e548f9bc1fedfb32ff788ea84897b4ff1e37e\$lut for cells of type $lut.
Using template $paramod$a37db0b0eadec24f125372fdddf940cf040138b2\$lut for cells of type $lut.
Using template $paramod$d854dd8b4338b55b21d853bca677c523dbf3efc1\$lut for cells of type $lut.
Using template $paramod$1c681672d62bc940516a5cbd8af6554dafe589ba\$lut for cells of type $lut.
Using template $paramod$c1eb0deca17cf6aecd9601324ce5913ad4b4a60f\$lut for cells of type $lut.
Using template $paramod$4e6ffe4348b69f440d0f4178473dfe2502d08630\$lut for cells of type $lut.
Using template $paramod$e771f655dfca90a7dad8ce6b6c93b5e917ec8c00\$lut for cells of type $lut.
Using template $paramod$660f890206fa4714d8d4a28cce66fa8651be6a6a\$lut for cells of type $lut.
Using template $paramod$ee25a0942e8189746ff6dc0beb7a28e6b4a10a16\$lut for cells of type $lut.
Using template $paramod$42501946b6b2998889646152432dd88d2b75b634\$lut for cells of type $lut.
Using template $paramod$842dd86f9f7aa130dbd0ef3209d3fcde5e17e90c\$lut for cells of type $lut.
Using template $paramod$e766ab923cc2fcd0128610f32d19fe45e239a1b9\$lut for cells of type $lut.
Using template $paramod$29492e4b689210ff3fe11e9e43fbf1d64bce115d\$lut for cells of type $lut.
Using template $paramod$e4e96a5dece796d779288739da28d0f9a19e7c8a\$lut for cells of type $lut.
Using template $paramod$7bc55f6d630c170c1e9979f38b1bed998272f0c7\$lut for cells of type $lut.
Using template $paramod$c315fd171a22ad0b563d890e3adda172ea240769\$lut for cells of type $lut.
Using template $paramod$61bc98ece8c76bffd4acdf40e5f231340cba90fc\$lut for cells of type $lut.
Using template $paramod$2267ac9f03303ad39b80e5501eb1b68de689c513\$lut for cells of type $lut.
Using template $paramod$2c6a803f9a35ba05157b39592475060a94440e2e\$lut for cells of type $lut.
Using template $paramod$3447816514f89c90a1316bab7579a2f7f8952448\$lut for cells of type $lut.
Using template $paramod$1e524b2e7adc40301a949f6ae2a1d7735f8b15f2\$lut for cells of type $lut.
Using template $paramod$db3cc515e6967efc802249619c7772e9ca1c5c71\$lut for cells of type $lut.
Using template $paramod$b19846ef51b9964dadba1ada32fb04c74dad7903\$lut for cells of type $lut.
Using template $paramod$f67053edb34022bbb6fe34cd3bebc7f881bdc769\$lut for cells of type $lut.
Using template $paramod$2c67814f601655eca5f6ffd9555e719b198943e4\$lut for cells of type $lut.
Using template $paramod$fe2ccc9771c7f3621af3392ea69c0322e13310d4\$lut for cells of type $lut.
Using template $paramod$2661aa2601af93e362041e04a59405a491f36855\$lut for cells of type $lut.
Using template $paramod$6675d9f7f4123eda7e393a1acee237e1e89ab062\$lut for cells of type $lut.
Using template $paramod$22512b315e76b174ccac643801c06abc56e24d59\$lut for cells of type $lut.
Using template $paramod$30828bd0296dc776d04e807f9570f839f8c1212e\$lut for cells of type $lut.
Using template $paramod$e71acd1fd0d505c5322a040014ca4f2fbd36a053\$lut for cells of type $lut.
Using template $paramod$28d03c30566c52c086643dcc8dd623663c10e996\$lut for cells of type $lut.
Using template $paramod$7efe707b39447a7527c2fcbfcc8672a0fd26369b\$lut for cells of type $lut.
Using template $paramod$64ddb66d90973b1ca457b72af7e175fbaf239dae\$lut for cells of type $lut.
Using template $paramod$4518d24fec38775f282096f22ad6cfb50f51384f\$lut for cells of type $lut.
Using template $paramod$b89fe0a4a3c7ce1efbab7fc387a51e0b19460074\$lut for cells of type $lut.
Using template $paramod$1fc24f04c9d167ae205e81437168472c81ec935a\$lut for cells of type $lut.
Using template $paramod$26c6eee984c99ab7c3bb4a85cab5854f70684cc5\$lut for cells of type $lut.
Using template $paramod$81844168a8d25dd48dd4895deea6d771aa5b8fde\$lut for cells of type $lut.
Using template $paramod$d9ebd6a1c70c09175a5c5abd7723f36e83c5a430\$lut for cells of type $lut.
Using template $paramod$8ba213f0b4dba40504c56dad5f99fb459b2f68a8\$lut for cells of type $lut.
Using template $paramod$00a5bc45e6667f51f28d5b4677f421958cecc119\$lut for cells of type $lut.
Using template $paramod$a1024f3ec94f9b786580fea5a9cd84683dc40458\$lut for cells of type $lut.
Using template $paramod$3de4a17011000e4091e77a5bb101154f727a263a\$lut for cells of type $lut.
Using template $paramod$2938cd0ffe3aaa209d4d48a957353047558f8b1d\$lut for cells of type $lut.
Using template $paramod$6c23221e23f4f1a9cb87c329d41460c6691a4d04\$lut for cells of type $lut.
Using template $paramod$f2ce3498461541a6e9dca29bd9abaae446707948\$lut for cells of type $lut.
Using template $paramod$1105389d7dd9bb30649af81306ba16328e2f6e49\$lut for cells of type $lut.
Using template $paramod$1ce5fb502f3e4f1b0f86f31e5ec4c640f74c5cff\$lut for cells of type $lut.
Using template $paramod$78dd9ca1cf116fcd6593416481a39b615bcb85e2\$lut for cells of type $lut.
Using template $paramod$f3681af76a61a5b27cbf7d348fac70653361809d\$lut for cells of type $lut.
Using template $paramod$b12d0ebf4b313301c5e900a293a6ad87a256c8c9\$lut for cells of type $lut.
Using template $paramod$0bfaa34ef6d5b8c233add8f10ba847a550719cf0\$lut for cells of type $lut.
Using template $paramod$1186a4bdab53554f56603dcb5d5debb8bd840f7c\$lut for cells of type $lut.
Using template $paramod$0305931c97524dad08baf4c8a24d53cb1a4947bd\$lut for cells of type $lut.
Using template $paramod$58e71104dae03e7c180e8c2e06f567b992f4b033\$lut for cells of type $lut.
Using template $paramod$4e6749e9b95ad2764f31064337564f1723ef370d\$lut for cells of type $lut.
Using template $paramod$ab5ecb4bb9c162f5ba5da1abd9503b9c94ed4225\$lut for cells of type $lut.
Using template $paramod$763c18124ed90d56d1dd86cd9992925569b75a36\$lut for cells of type $lut.
Using template $paramod$86aba9773586d9634808b95598396b7242f78627\$lut for cells of type $lut.
Using template $paramod$91155ba6fe8dd64ab08026ed7c7af7fd09871b70\$lut for cells of type $lut.
Using template $paramod$7f3617f4b24dd2e899782b88617aab9578e70e0f\$lut for cells of type $lut.
Using template $paramod$a305c1f27ac12036e1ee053f6f465794d7c5c73c\$lut for cells of type $lut.
Using template $paramod$a8352d82ab7c14cfbb6198c627a124b716bd9df3\$lut for cells of type $lut.
Using template $paramod$3e1b2cf83dd36bd3b564b9dba224d7f94229465c\$lut for cells of type $lut.
Using template $paramod$bb18179c7fb2295f17b5464e3663115dc945c57d\$lut for cells of type $lut.
Using template $paramod$6d0d05788a4bfe02738d7ab1ff03cff4baff275c\$lut for cells of type $lut.
Using template $paramod$ff3b04fc04a5df84a70499147f6a962e56652ac9\$lut for cells of type $lut.
Using template $paramod$10f9ec10907e3614f4091bb6c69006195a5f5733\$lut for cells of type $lut.
Using template $paramod$30898eb0bc86cab2371acd5c5984a4d2c4690cf9\$lut for cells of type $lut.
Using template $paramod$aedf4365e5c2ccbe7facde4e68bb0ae10830614c\$lut for cells of type $lut.
Using template $paramod$15e465e947aa87c07d3af9c64951debe4d4f6075\$lut for cells of type $lut.
Using template $paramod$58f61467c3827992dbf1004ed46daff736f32dbe\$lut for cells of type $lut.
Using template $paramod$38eb41627b73166bbe454e6a54f14d2c3bea9c81\$lut for cells of type $lut.
Using template $paramod$eac7ee502612457d62e471974b70426d3c28f7fd\$lut for cells of type $lut.
Using template $paramod$af5f1791ca1eedbc1dac772671b4d0521f2ce315\$lut for cells of type $lut.
Using template $paramod$45ff8b02c1693d199faeb44479a1129ed550934e\$lut for cells of type $lut.
Using template $paramod$e55f3b8e371e572e03cae9f44a2fa1ff07888b00\$lut for cells of type $lut.
Using template $paramod$0d0c8d4c869809795932c7acab2a7b01fb157f16\$lut for cells of type $lut.
Using template $paramod$f73861c8544f46823f0b3c84f17aadd5bb441928\$lut for cells of type $lut.
Using template $paramod$d992f6943ad948563ab87b9b1c8fc9fe829ae4b4\$lut for cells of type $lut.
Using template $paramod$5e2fc3b9c3d82261c52e783ed7f43a21ce4f00cf\$lut for cells of type $lut.
Using template $paramod$4e06ec5973d6aebb39d8eb687f8a4e5a5d11f8cf\$lut for cells of type $lut.
Using template $paramod$8461a38da2644081983cd5b082d7f6c55a8dc5b7\$lut for cells of type $lut.
Using template $paramod$2acc56796dae1e7bbd8d34441a24f749523f3d30\$lut for cells of type $lut.
Using template $paramod$04ae10f7d848c17f6abdd4c00ba30939b2cb4eb5\$lut for cells of type $lut.
Using template $paramod$cc32a05866f608aca38637d6c7ba9e5d077e8484\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~2684 debug messages>

7.23. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2953.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2944.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2891.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2891.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2954.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2891.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2906.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2890.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2897.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2874.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2916.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2898.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2898.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2898.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2956.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2911.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2957.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2957.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2912.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2897.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2909.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2904.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2885.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2889.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2902.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2915.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2874.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2972.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2891.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2970.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2914.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2965.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2898.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2906.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2899.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2901.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2902.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2905.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2904.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2897.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2953.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2971.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2906.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2907.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2898.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2911.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2908.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2910.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2910.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2882.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2954.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2964.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2912.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2961.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2944.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2963.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2969.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2945.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2962.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2953.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2918.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2872.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2913.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2889.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2944.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2908.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2968.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2974.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2876.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2957.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2897.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2967.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2966.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2880.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2909.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2952.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2883.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2898.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2889.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2890.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2904.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2903.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2903.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2885.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2944.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2902.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2919.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2912.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2867.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2871.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2873.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2953.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2877.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2952.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2976.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2918.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2952.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2914.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2975.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2890.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2891.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2900.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2905.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2898.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2957.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2867.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2905.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2891.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2907.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2908.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2909.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2910.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2911.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2885.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2902.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2915.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2916.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2889.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2873.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2919.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2907.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2918.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2954.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2914.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2872.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2950.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2948.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2952.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2946.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2955.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2956.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2947.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2956.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2884.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2917.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2949.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2951.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2890.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2891.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2871.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2919.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2916.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2915.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2977.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2973.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2903.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2881.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$2865$auto$blifparse.cc:525:parse_blif$2867.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)

7.24. Executing SETUNDEF pass (replace undef values with defined constants).

7.25. Executing HILOMAP pass (mapping to constant drivers).
Removed 0 unused cells and 1385 unused wires.

7.26. Executing AUTONAME pass.
Renamed 15691 objects in module top (51 iterations).
<suppressed ~1674 debug messages>

7.27. Executing HIERARCHY pass (managing design hierarchy).

7.27.1. Analyzing design hierarchy..
Top module:  \top

7.27.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

7.28. Printing statistics.

=== top ===

   Number of wires:                803
   Number of wire bits:           1505
   Number of public wires:         803
   Number of public wire bits:    1505
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                940
     ALU                           129
     DFFC                           40
     DFFCE                          49
     DFFP                            1
     GND                             1
     IBUF                            6
     LUT1                          285
     LUT2                           59
     LUT3                           16
     LUT4                           96
     MUX2_LUT5                     156
     MUX2_LUT6                      64
     MUX2_LUT7                      18
     MUX2_LUT8                       4
     OBUF                           15
     VCC                             1

7.29. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

7.30. Executing JSON backend.

End of script. Logfile hash: 43c78ec44f
Yosys 0.26+1 (git sha1 b1a011138, x86_64-w64-mingw32-g++ 9.2.1 -Os)
Time spent: 1% 21x opt_expr (0 sec), 1% 19x opt_clean (0 sec), ...
